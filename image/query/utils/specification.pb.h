// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supersonic/proto/specification.proto

#ifndef PROTOBUF_supersonic_2fproto_2fspecification_2eproto__INCLUDED
#define PROTOBUF_supersonic_2fproto_2fspecification_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "image/query/utils/supersonic.pb.h"
// @@protoc_insertion_point(includes)

namespace image {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_supersonic_2fproto_2fspecification_2eproto();
void protobuf_AssignDesc_supersonic_2fproto_2fspecification_2eproto();
void protobuf_ShutdownFile_supersonic_2fproto_2fspecification_2eproto();

class ExtendedSortSpecification;
class ExtendedSortSpecification_Key;
class Distinctness;

// ===================================================================

class ExtendedSortSpecification_Key : public ::google::protobuf::Message {
 public:
  ExtendedSortSpecification_Key();
  virtual ~ExtendedSortSpecification_Key();

  ExtendedSortSpecification_Key(const ExtendedSortSpecification_Key& from);

  inline ExtendedSortSpecification_Key& operator=(const ExtendedSortSpecification_Key& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtendedSortSpecification_Key& default_instance();

  void Swap(ExtendedSortSpecification_Key* other);

  // implements Message ----------------------------------------------

  inline ExtendedSortSpecification_Key* New() const { return New(NULL); }

  ExtendedSortSpecification_Key* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtendedSortSpecification_Key& from);
  void MergeFrom(const ExtendedSortSpecification_Key& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtendedSortSpecification_Key* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string attribute_name = 1;
  bool has_attribute_name() const;
  void clear_attribute_name();
  static const int kAttributeNameFieldNumber = 1;
  const ::std::string& attribute_name() const;
  void set_attribute_name(const ::std::string& value);
  void set_attribute_name(const char* value);
  void set_attribute_name(const char* value, size_t size);
  ::std::string* mutable_attribute_name();
  ::std::string* release_attribute_name();
  void set_allocated_attribute_name(::std::string* attribute_name);

  // required .supersonic.ColumnOrder column_order = 2;
  bool has_column_order() const;
  void clear_column_order();
  static const int kColumnOrderFieldNumber = 2;
  ::container::ColumnOrder column_order() const;
  void set_column_order(::container::ColumnOrder value);

  // optional bool case_sensitive = 3;
  bool has_case_sensitive() const;
  void clear_case_sensitive();
  static const int kCaseSensitiveFieldNumber = 3;
  bool case_sensitive() const;
  void set_case_sensitive(bool value);

  // @@protoc_insertion_point(class_scope:supersonic.ExtendedSortSpecification.Key)
 private:
  inline void set_has_attribute_name();
  inline void clear_has_attribute_name();
  inline void set_has_column_order();
  inline void clear_has_column_order();
  inline void set_has_case_sensitive();
  inline void clear_has_case_sensitive();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr attribute_name_;
  int column_order_;
  bool case_sensitive_;
  friend void  protobuf_AddDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_AssignDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_ShutdownFile_supersonic_2fproto_2fspecification_2eproto();

  void InitAsDefaultInstance();
  static ExtendedSortSpecification_Key* default_instance_;
};
// -------------------------------------------------------------------

class ExtendedSortSpecification : public ::google::protobuf::Message {
 public:
  ExtendedSortSpecification();
  virtual ~ExtendedSortSpecification();

  ExtendedSortSpecification(const ExtendedSortSpecification& from);

  inline ExtendedSortSpecification& operator=(const ExtendedSortSpecification& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ExtendedSortSpecification& default_instance();

  void Swap(ExtendedSortSpecification* other);

  // implements Message ----------------------------------------------

  inline ExtendedSortSpecification* New() const { return New(NULL); }

  ExtendedSortSpecification* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ExtendedSortSpecification& from);
  void MergeFrom(const ExtendedSortSpecification& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(ExtendedSortSpecification* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ExtendedSortSpecification_Key Key;

  // accessors -------------------------------------------------------

  // repeated .supersonic.ExtendedSortSpecification.Key keys = 1;
  int keys_size() const;
  void clear_keys();
  static const int kKeysFieldNumber = 1;
  const ::container::ExtendedSortSpecification_Key& keys(int index) const;
  ::container::ExtendedSortSpecification_Key* mutable_keys(int index);
  ::container::ExtendedSortSpecification_Key* add_keys();
  const ::google::protobuf::RepeatedPtrField< ::container::ExtendedSortSpecification_Key >&
      keys() const;
  ::google::protobuf::RepeatedPtrField< ::container::ExtendedSortSpecification_Key >*
      mutable_keys();

  // optional uint64 limit = 2;
  bool has_limit() const;
  void clear_limit();
  static const int kLimitFieldNumber = 2;
  ::google::protobuf::uint64 limit() const;
  void set_limit(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:supersonic.ExtendedSortSpecification)
 private:
  inline void set_has_limit();
  inline void clear_has_limit();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::container::ExtendedSortSpecification_Key > keys_;
  ::google::protobuf::uint64 limit_;
  friend void  protobuf_AddDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_AssignDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_ShutdownFile_supersonic_2fproto_2fspecification_2eproto();

  void InitAsDefaultInstance();
  static ExtendedSortSpecification* default_instance_;
};
// -------------------------------------------------------------------

class Distinctness : public ::google::protobuf::Message {
 public:
  Distinctness();
  virtual ~Distinctness();

  Distinctness(const Distinctness& from);

  inline Distinctness& operator=(const Distinctness& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Distinctness& default_instance();

  void Swap(Distinctness* other);

  // implements Message ----------------------------------------------

  inline Distinctness* New() const { return New(NULL); }

  Distinctness* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Distinctness& from);
  void MergeFrom(const Distinctness& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(Distinctness* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool is_not_distinct = 1;
  bool has_is_not_distinct() const;
  void clear_is_not_distinct();
  static const int kIsNotDistinctFieldNumber = 1;
  bool is_not_distinct() const;
  void set_is_not_distinct(bool value);

  // optional bool is_exact_distinct = 2;
  bool has_is_exact_distinct() const;
  void clear_is_exact_distinct();
  static const int kIsExactDistinctFieldNumber = 2;
  bool is_exact_distinct() const;
  void set_is_exact_distinct(bool value);

  // optional int32 estimated_distinct_threshold = 3;
  bool has_estimated_distinct_threshold() const;
  void clear_estimated_distinct_threshold();
  static const int kEstimatedDistinctThresholdFieldNumber = 3;
  ::google::protobuf::int32 estimated_distinct_threshold() const;
  void set_estimated_distinct_threshold(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:supersonic.Distinctness)
 private:
  inline void set_has_is_not_distinct();
  inline void clear_has_is_not_distinct();
  inline void set_has_is_exact_distinct();
  inline void clear_has_is_exact_distinct();
  inline void set_has_estimated_distinct_threshold();
  inline void clear_has_estimated_distinct_threshold();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  bool is_not_distinct_;
  bool is_exact_distinct_;
  ::google::protobuf::int32 estimated_distinct_threshold_;
  friend void  protobuf_AddDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_AssignDesc_supersonic_2fproto_2fspecification_2eproto();
  friend void protobuf_ShutdownFile_supersonic_2fproto_2fspecification_2eproto();

  void InitAsDefaultInstance();
  static Distinctness* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// ExtendedSortSpecification_Key

// required string attribute_name = 1;
inline bool ExtendedSortSpecification_Key::has_attribute_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ExtendedSortSpecification_Key::set_has_attribute_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ExtendedSortSpecification_Key::clear_has_attribute_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ExtendedSortSpecification_Key::clear_attribute_name() {
  attribute_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_attribute_name();
}
inline const ::std::string& ExtendedSortSpecification_Key::attribute_name() const {
  // @@protoc_insertion_point(field_get:supersonic.ExtendedSortSpecification.Key.attribute_name)
  return attribute_name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtendedSortSpecification_Key::set_attribute_name(const ::std::string& value) {
  set_has_attribute_name();
  attribute_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:supersonic.ExtendedSortSpecification.Key.attribute_name)
}
inline void ExtendedSortSpecification_Key::set_attribute_name(const char* value) {
  set_has_attribute_name();
  attribute_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:supersonic.ExtendedSortSpecification.Key.attribute_name)
}
inline void ExtendedSortSpecification_Key::set_attribute_name(const char* value, size_t size) {
  set_has_attribute_name();
  attribute_name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:supersonic.ExtendedSortSpecification.Key.attribute_name)
}
inline ::std::string* ExtendedSortSpecification_Key::mutable_attribute_name() {
  set_has_attribute_name();
  // @@protoc_insertion_point(field_mutable:supersonic.ExtendedSortSpecification.Key.attribute_name)
  return attribute_name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ExtendedSortSpecification_Key::release_attribute_name() {
  clear_has_attribute_name();
  return attribute_name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ExtendedSortSpecification_Key::set_allocated_attribute_name(::std::string* attribute_name) {
  if (attribute_name != NULL) {
    set_has_attribute_name();
  } else {
    clear_has_attribute_name();
  }
  attribute_name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), attribute_name);
  // @@protoc_insertion_point(field_set_allocated:supersonic.ExtendedSortSpecification.Key.attribute_name)
}

// required .supersonic.ColumnOrder column_order = 2;
inline bool ExtendedSortSpecification_Key::has_column_order() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtendedSortSpecification_Key::set_has_column_order() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtendedSortSpecification_Key::clear_has_column_order() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtendedSortSpecification_Key::clear_column_order() {
  column_order_ = 0;
  clear_has_column_order();
}
inline ::container::ColumnOrder ExtendedSortSpecification_Key::column_order() const {
  // @@protoc_insertion_point(field_get:supersonic.ExtendedSortSpecification.Key.column_order)
  return static_cast< ::container::ColumnOrder >(column_order_);
}
inline void ExtendedSortSpecification_Key::set_column_order(::container::ColumnOrder value) {
  assert(::container::ColumnOrder_IsValid(value));
  set_has_column_order();
  column_order_ = value;
  // @@protoc_insertion_point(field_set:supersonic.ExtendedSortSpecification.Key.column_order)
}

// optional bool case_sensitive = 3;
inline bool ExtendedSortSpecification_Key::has_case_sensitive() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ExtendedSortSpecification_Key::set_has_case_sensitive() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ExtendedSortSpecification_Key::clear_has_case_sensitive() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ExtendedSortSpecification_Key::clear_case_sensitive() {
  case_sensitive_ = false;
  clear_has_case_sensitive();
}
inline bool ExtendedSortSpecification_Key::case_sensitive() const {
  // @@protoc_insertion_point(field_get:supersonic.ExtendedSortSpecification.Key.case_sensitive)
  return case_sensitive_;
}
inline void ExtendedSortSpecification_Key::set_case_sensitive(bool value) {
  set_has_case_sensitive();
  case_sensitive_ = value;
  // @@protoc_insertion_point(field_set:supersonic.ExtendedSortSpecification.Key.case_sensitive)
}

// -------------------------------------------------------------------

// ExtendedSortSpecification

// repeated .supersonic.ExtendedSortSpecification.Key keys = 1;
inline int ExtendedSortSpecification::keys_size() const {
  return keys_.size();
}
inline void ExtendedSortSpecification::clear_keys() {
  keys_.Clear();
}
inline const ::container::ExtendedSortSpecification_Key& ExtendedSortSpecification::keys(int index) const {
  // @@protoc_insertion_point(field_get:supersonic.ExtendedSortSpecification.keys)
  return keys_.Get(index);
}
inline ::container::ExtendedSortSpecification_Key* ExtendedSortSpecification::mutable_keys(int index) {
  // @@protoc_insertion_point(field_mutable:supersonic.ExtendedSortSpecification.keys)
  return keys_.Mutable(index);
}
inline ::container::ExtendedSortSpecification_Key* ExtendedSortSpecification::add_keys() {
  // @@protoc_insertion_point(field_add:supersonic.ExtendedSortSpecification.keys)
  return keys_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::container::ExtendedSortSpecification_Key >&
ExtendedSortSpecification::keys() const {
  // @@protoc_insertion_point(field_list:supersonic.ExtendedSortSpecification.keys)
  return keys_;
}
inline ::google::protobuf::RepeatedPtrField< ::container::ExtendedSortSpecification_Key >*
ExtendedSortSpecification::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:supersonic.ExtendedSortSpecification.keys)
  return &keys_;
}

// optional uint64 limit = 2;
inline bool ExtendedSortSpecification::has_limit() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ExtendedSortSpecification::set_has_limit() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ExtendedSortSpecification::clear_has_limit() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ExtendedSortSpecification::clear_limit() {
  limit_ = GOOGLE_ULONGLONG(0);
  clear_has_limit();
}
inline ::google::protobuf::uint64 ExtendedSortSpecification::limit() const {
  // @@protoc_insertion_point(field_get:supersonic.ExtendedSortSpecification.limit)
  return limit_;
}
inline void ExtendedSortSpecification::set_limit(::google::protobuf::uint64 value) {
  set_has_limit();
  limit_ = value;
  // @@protoc_insertion_point(field_set:supersonic.ExtendedSortSpecification.limit)
}

// -------------------------------------------------------------------

// Distinctness

// optional bool is_not_distinct = 1;
inline bool Distinctness::has_is_not_distinct() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Distinctness::set_has_is_not_distinct() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Distinctness::clear_has_is_not_distinct() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Distinctness::clear_is_not_distinct() {
  is_not_distinct_ = false;
  clear_has_is_not_distinct();
}
inline bool Distinctness::is_not_distinct() const {
  // @@protoc_insertion_point(field_get:supersonic.Distinctness.is_not_distinct)
  return is_not_distinct_;
}
inline void Distinctness::set_is_not_distinct(bool value) {
  set_has_is_not_distinct();
  is_not_distinct_ = value;
  // @@protoc_insertion_point(field_set:supersonic.Distinctness.is_not_distinct)
}

// optional bool is_exact_distinct = 2;
inline bool Distinctness::has_is_exact_distinct() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Distinctness::set_has_is_exact_distinct() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Distinctness::clear_has_is_exact_distinct() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Distinctness::clear_is_exact_distinct() {
  is_exact_distinct_ = false;
  clear_has_is_exact_distinct();
}
inline bool Distinctness::is_exact_distinct() const {
  // @@protoc_insertion_point(field_get:supersonic.Distinctness.is_exact_distinct)
  return is_exact_distinct_;
}
inline void Distinctness::set_is_exact_distinct(bool value) {
  set_has_is_exact_distinct();
  is_exact_distinct_ = value;
  // @@protoc_insertion_point(field_set:supersonic.Distinctness.is_exact_distinct)
}

// optional int32 estimated_distinct_threshold = 3;
inline bool Distinctness::has_estimated_distinct_threshold() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Distinctness::set_has_estimated_distinct_threshold() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Distinctness::clear_has_estimated_distinct_threshold() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Distinctness::clear_estimated_distinct_threshold() {
  estimated_distinct_threshold_ = 0;
  clear_has_estimated_distinct_threshold();
}
inline ::google::protobuf::int32 Distinctness::estimated_distinct_threshold() const {
  // @@protoc_insertion_point(field_get:supersonic.Distinctness.estimated_distinct_threshold)
  return estimated_distinct_threshold_;
}
inline void Distinctness::set_estimated_distinct_threshold(::google::protobuf::int32 value) {
  set_has_estimated_distinct_threshold();
  estimated_distinct_threshold_ = value;
  // @@protoc_insertion_point(field_set:supersonic.Distinctness.estimated_distinct_threshold)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace image

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_supersonic_2fproto_2fspecification_2eproto__INCLUDED
