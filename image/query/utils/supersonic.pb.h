// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: supersonic/proto/supersonic.proto

#ifndef PROTOBUF_supersonic_2fproto_2fsupersonic_2eproto__INCLUDED
#define PROTOBUF_supersonic_2fproto_2fsupersonic_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "image/query/utils/stack_trace.pb.h"
// @@protoc_insertion_point(includes)

namespace image {

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_supersonic_2fproto_2fsupersonic_2eproto();
void protobuf_AssignDesc_supersonic_2fproto_2fsupersonic_2eproto();
void protobuf_ShutdownFile_supersonic_2fproto_2fsupersonic_2eproto();

class SerializedException;

enum DataType {
  INT32 = 1,
  INT64 = 2,
  UINT32 = 8,
  UINT64 = 3,
  FLOAT = 9,
  DOUBLE = 5,
  BOOL = 6,
  DATE = 10,
  DATETIME = 4,
  STRING = 0,
  BINARY = 7,
  ENUM = 13,
  DATA_TYPE = 11
};
bool DataType_IsValid(int value);
const DataType DataType_MIN = STRING;
const DataType DataType_MAX = ENUM;
const int DataType_ARRAYSIZE = DataType_MAX + 1;

const ::google::protobuf::EnumDescriptor* DataType_descriptor();
inline const ::std::string& DataType_Name(DataType value) {
  return ::google::protobuf::internal::NameOfEnum(
    DataType_descriptor(), value);
}
inline bool DataType_Parse(
    const ::std::string& name, DataType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<DataType>(
    DataType_descriptor(), name, value);
}
enum ReturnCode {
  OK = 0,
  END_OF_INPUT = 1,
  BEFORE_INPUT = 2,
  WAITING_ON_BARRIER = 3,
  ERROR_UNKNOWN_ERROR = 100,
  ERROR_GENERAL_IO_ERROR = 101,
  ERROR_MEMORY_EXCEEDED = 102,
  ERROR_NOT_IMPLEMENTED = 103,
  ERROR_EVALUATION_ERROR = 104,
  ERROR_BAD_PROTO = 105,
  ERROR_TEMP_FILE_CREATION_ERROR = 106,
  ERROR_TOO_FEW_ROWS = 301,
  ERROR_TOO_MANY_ROWS = 302,
  ERROR_TOO_FEW_COLUMNS = 303,
  ERROR_TOO_MANY_COLUMNS = 304,
  ERROR_DUPLICATED_UNIQUE_KEY = 305,
  ERROR_GENERIC_SCHEMA_ERROR = 400,
  ERROR_ATTRIBUTE_COUNT_MISMATCH = 401,
  ERROR_ATTRIBUTE_TYPE_MISMATCH = 402,
  ERROR_ATTRIBUTE_MISSING = 403,
  ERROR_ATTRIBUTE_EXISTS = 404,
  ERROR_INVALID_ARGUMENT_TYPE = 405,
  ERROR_ATTRIBUTE_IS_NULLABLE = 406,
  ERROR_INVALID_ARGUMENT_VALUE = 407,
  ERROR_ATTRIBUTE_AMBIGUOUS = 408,
  ERROR_DUPLICATE_ENUM_VALUE_NUMBER = 420,
  ERROR_DUPLICATE_ENUM_VALUE_NAME = 421,
  ERROR_UNDEFINED_ENUM_VALUE_NUMBER = 422,
  ERROR_UNDEFINED_ENUM_VALUE_NAME = 423,
  ERROR_FOREIGN_KEY_INVALID = 501,
  INTERRUPTED = 1000
};
bool ReturnCode_IsValid(int value);
const ReturnCode ReturnCode_MIN = OK;
const ReturnCode ReturnCode_MAX = INTERRUPTED;
const int ReturnCode_ARRAYSIZE = ReturnCode_MAX + 1;

const ::google::protobuf::EnumDescriptor* ReturnCode_descriptor();
inline const ::std::string& ReturnCode_Name(ReturnCode value) {
  return ::google::protobuf::internal::NameOfEnum(
    ReturnCode_descriptor(), value);
}
inline bool ReturnCode_Parse(
    const ::std::string& name, ReturnCode* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ReturnCode>(
    ReturnCode_descriptor(), name, value);
}
enum Nullability {
  NOT_NULLABLE = 0,
  NULLABLE = 1
};
bool Nullability_IsValid(int value);
const Nullability Nullability_MIN = NOT_NULLABLE;
const Nullability Nullability_MAX = NULLABLE;
const int Nullability_ARRAYSIZE = Nullability_MAX + 1;

const ::google::protobuf::EnumDescriptor* Nullability_descriptor();
inline const ::std::string& Nullability_Name(Nullability value) {
  return ::google::protobuf::internal::NameOfEnum(
    Nullability_descriptor(), value);
}
inline bool Nullability_Parse(
    const ::std::string& name, Nullability* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Nullability>(
    Nullability_descriptor(), name, value);
}
enum Aggregation {
  SUM = 0,
  MIN = 1,
  MAX = 2,
  COUNT = 3,
  CONCAT = 4,
  FIRST = 5,
  LAST = 6
};
bool Aggregation_IsValid(int value);
const Aggregation Aggregation_MIN = SUM;
const Aggregation Aggregation_MAX = LAST;
const int Aggregation_ARRAYSIZE = Aggregation_MAX + 1;

const ::google::protobuf::EnumDescriptor* Aggregation_descriptor();
inline const ::std::string& Aggregation_Name(Aggregation value) {
  return ::google::protobuf::internal::NameOfEnum(
    Aggregation_descriptor(), value);
}
inline bool Aggregation_Parse(
    const ::std::string& name, Aggregation* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Aggregation>(
    Aggregation_descriptor(), name, value);
}
enum ColumnOrder {
  ASCENDING = 0,
  DESCENDING = 1
};
bool ColumnOrder_IsValid(int value);
const ColumnOrder ColumnOrder_MIN = ASCENDING;
const ColumnOrder ColumnOrder_MAX = DESCENDING;
const int ColumnOrder_ARRAYSIZE = ColumnOrder_MAX + 1;

const ::google::protobuf::EnumDescriptor* ColumnOrder_descriptor();
inline const ::std::string& ColumnOrder_Name(ColumnOrder value) {
  return ::google::protobuf::internal::NameOfEnum(
    ColumnOrder_descriptor(), value);
}
inline bool ColumnOrder_Parse(
    const ::std::string& name, ColumnOrder* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ColumnOrder>(
    ColumnOrder_descriptor(), name, value);
}
enum JoinType {
  INNER = 0,
  LEFT_OUTER = 1,
  RIGHT_OUTER = 2,
  FULL_OUTER = 3
};
bool JoinType_IsValid(int value);
const JoinType JoinType_MIN = INNER;
const JoinType JoinType_MAX = FULL_OUTER;
const int JoinType_ARRAYSIZE = JoinType_MAX + 1;

const ::google::protobuf::EnumDescriptor* JoinType_descriptor();
inline const ::std::string& JoinType_Name(JoinType value) {
  return ::google::protobuf::internal::NameOfEnum(
    JoinType_descriptor(), value);
}
inline bool JoinType_Parse(
    const ::std::string& name, JoinType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JoinType>(
    JoinType_descriptor(), name, value);
}
enum KeyUniqueness {
  NOT_UNIQUE = 0,
  UNIQUE = 1
};
bool KeyUniqueness_IsValid(int value);
const KeyUniqueness KeyUniqueness_MIN = NOT_UNIQUE;
const KeyUniqueness KeyUniqueness_MAX = UNIQUE;
const int KeyUniqueness_ARRAYSIZE = KeyUniqueness_MAX + 1;

const ::google::protobuf::EnumDescriptor* KeyUniqueness_descriptor();
inline const ::std::string& KeyUniqueness_Name(KeyUniqueness value) {
  return ::google::protobuf::internal::NameOfEnum(
    KeyUniqueness_descriptor(), value);
}
inline bool KeyUniqueness_Parse(
    const ::std::string& name, KeyUniqueness* value) {
  return ::google::protobuf::internal::ParseNamedEnum<KeyUniqueness>(
    KeyUniqueness_descriptor(), name, value);
}
// ===================================================================

class SerializedException : public ::google::protobuf::Message {
 public:
  SerializedException();
  virtual ~SerializedException();

  SerializedException(const SerializedException& from);

  inline SerializedException& operator=(const SerializedException& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const SerializedException& default_instance();

  void Swap(SerializedException* other);

  // implements Message ----------------------------------------------

  inline SerializedException* New() const { return New(NULL); }

  SerializedException* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SerializedException& from);
  void MergeFrom(const SerializedException& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(SerializedException* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 timestamp = 1;
  bool has_timestamp() const;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // required .supersonic.ReturnCode return_code = 2;
  bool has_return_code() const;
  void clear_return_code();
  static const int kReturnCodeFieldNumber = 2;
  ::container::ReturnCode return_code() const;
  void set_return_code(::container::ReturnCode value);

  // required string message = 3;
  bool has_message() const;
  void clear_message();
  static const int kMessageFieldNumber = 3;
  const ::std::string& message() const;
  void set_message(const ::std::string& value);
  void set_message(const char* value);
  void set_message(const char* value, size_t size);
  ::std::string* mutable_message();
  ::std::string* release_message();
  void set_allocated_message(::std::string* message);

  // required .common.StackTrace stack_trace = 4;
  bool has_stack_trace() const;
  void clear_stack_trace();
  static const int kStackTraceFieldNumber = 4;
  const ::container::StackTrace& stack_trace() const;
  ::container::StackTrace* mutable_stack_trace();
  ::container::StackTrace* release_stack_trace();
  void set_allocated_stack_trace(::container::StackTrace* stack_trace);

  // @@protoc_insertion_point(class_scope:supersonic.SerializedException)
 private:
  inline void set_has_timestamp();
  inline void clear_has_timestamp();
  inline void set_has_return_code();
  inline void clear_has_return_code();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_stack_trace();
  inline void clear_has_stack_trace();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 timestamp_;
  ::google::protobuf::internal::ArenaStringPtr message_;
  ::container::StackTrace* stack_trace_;
  int return_code_;
  friend void  protobuf_AddDesc_supersonic_2fproto_2fsupersonic_2eproto();
  friend void protobuf_AssignDesc_supersonic_2fproto_2fsupersonic_2eproto();
  friend void protobuf_ShutdownFile_supersonic_2fproto_2fsupersonic_2eproto();

  void InitAsDefaultInstance();
  static SerializedException* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// SerializedException

// required int64 timestamp = 1;
inline bool SerializedException::has_timestamp() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void SerializedException::set_has_timestamp() {
  _has_bits_[0] |= 0x00000001u;
}
inline void SerializedException::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void SerializedException::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
inline ::google::protobuf::int64 SerializedException::timestamp() const {
  // @@protoc_insertion_point(field_get:supersonic.SerializedException.timestamp)
  return timestamp_;
}
inline void SerializedException::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:supersonic.SerializedException.timestamp)
}

// required .supersonic.ReturnCode return_code = 2;
inline bool SerializedException::has_return_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void SerializedException::set_has_return_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void SerializedException::clear_has_return_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void SerializedException::clear_return_code() {
  return_code_ = 0;
  clear_has_return_code();
}
inline ::container::ReturnCode SerializedException::return_code() const {
  // @@protoc_insertion_point(field_get:supersonic.SerializedException.return_code)
  return static_cast< ::container::ReturnCode >(return_code_);
}
inline void SerializedException::set_return_code(::container::ReturnCode value) {
  assert(::container::ReturnCode_IsValid(value));
  set_has_return_code();
  return_code_ = value;
  // @@protoc_insertion_point(field_set:supersonic.SerializedException.return_code)
}

// required string message = 3;
inline bool SerializedException::has_message() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void SerializedException::set_has_message() {
  _has_bits_[0] |= 0x00000004u;
}
inline void SerializedException::clear_has_message() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void SerializedException::clear_message() {
  message_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_message();
}
inline const ::std::string& SerializedException::message() const {
  // @@protoc_insertion_point(field_get:supersonic.SerializedException.message)
  return message_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializedException::set_message(const ::std::string& value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:supersonic.SerializedException.message)
}
inline void SerializedException::set_message(const char* value) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:supersonic.SerializedException.message)
}
inline void SerializedException::set_message(const char* value, size_t size) {
  set_has_message();
  message_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:supersonic.SerializedException.message)
}
inline ::std::string* SerializedException::mutable_message() {
  set_has_message();
  // @@protoc_insertion_point(field_mutable:supersonic.SerializedException.message)
  return message_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* SerializedException::release_message() {
  clear_has_message();
  return message_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void SerializedException::set_allocated_message(::std::string* message) {
  if (message != NULL) {
    set_has_message();
  } else {
    clear_has_message();
  }
  message_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), message);
  // @@protoc_insertion_point(field_set_allocated:supersonic.SerializedException.message)
}

// required .common.StackTrace stack_trace = 4;
inline bool SerializedException::has_stack_trace() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void SerializedException::set_has_stack_trace() {
  _has_bits_[0] |= 0x00000008u;
}
inline void SerializedException::clear_has_stack_trace() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void SerializedException::clear_stack_trace() {
  if (stack_trace_ != NULL) stack_trace_->::container::StackTrace::Clear();
  clear_has_stack_trace();
}
inline const ::container::StackTrace& SerializedException::stack_trace() const {
  // @@protoc_insertion_point(field_get:supersonic.SerializedException.stack_trace)
  return stack_trace_ != NULL ? *stack_trace_ : *default_instance_->stack_trace_;
}
inline ::container::StackTrace* SerializedException::mutable_stack_trace() {
  set_has_stack_trace();
  if (stack_trace_ == NULL) {
    stack_trace_ = new ::container::StackTrace;
  }
  // @@protoc_insertion_point(field_mutable:supersonic.SerializedException.stack_trace)
  return stack_trace_;
}
inline ::container::StackTrace* SerializedException::release_stack_trace() {
  clear_has_stack_trace();
  ::container::StackTrace* temp = stack_trace_;
  stack_trace_ = NULL;
  return temp;
}
inline void SerializedException::set_allocated_stack_trace(::container::StackTrace* stack_trace) {
  delete stack_trace_;
  stack_trace_ = stack_trace;
  if (stack_trace) {
    set_has_stack_trace();
  } else {
    clear_has_stack_trace();
  }
  // @@protoc_insertion_point(field_set_allocated:supersonic.SerializedException.stack_trace)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace image

#ifndef SWIG
namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::container::DataType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::DataType>() {
  return ::container::DataType_descriptor();
}
template <> struct is_proto_enum< ::container::ReturnCode> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::ReturnCode>() {
  return ::container::ReturnCode_descriptor();
}
template <> struct is_proto_enum< ::container::Nullability> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::Nullability>() {
  return ::container::Nullability_descriptor();
}
template <> struct is_proto_enum< ::container::Aggregation> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::Aggregation>() {
  return ::container::Aggregation_descriptor();
}
template <> struct is_proto_enum< ::container::ColumnOrder> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::ColumnOrder>() {
  return ::container::ColumnOrder_descriptor();
}
template <> struct is_proto_enum< ::container::JoinType> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::JoinType>() {
  return ::container::JoinType_descriptor();
}
template <> struct is_proto_enum< ::container::KeyUniqueness> : ::google::protobuf::internal::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::container::KeyUniqueness>() {
  return ::container::KeyUniqueness_descriptor();
}

}  // namespace protobuf
}  // namespace google
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_supersonic_2fproto_2fsupersonic_2eproto__INCLUDED
